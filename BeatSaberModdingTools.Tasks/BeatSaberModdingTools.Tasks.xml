<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BeatSaberModdingTools.Tasks</name>
    </assembly>
    <members>
        <member name="T:BeatSaberModdingTools.Tasks.GetCommitHash">
            <summary>
            Gets the git commit short hash of the project.
            </summary>
        </member>
        <member name="P:BeatSaberModdingTools.Tasks.GetCommitHash.ProjectDir">
            <summary>
            The directory of the project.
            </summary>
        </member>
        <member name="P:BeatSaberModdingTools.Tasks.GetCommitHash.CommitShortHash">
            <summary>
            First 8 characters of the current commit hash.
            </summary>
        </member>
        <member name="P:BeatSaberModdingTools.Tasks.GetCommitHash.Modified">
            <summary>
            'Modified' if the repository has uncommitted changes, 'Unmodified' if it doesn't. Will be left blank if unsupported (Only works if git bash is installed).
            </summary>
        </member>
        <member name="F:BeatSaberModdingTools.Tasks.GetCommitHash.Logger">
            <summary>
            <see cref="T:BeatSaberModdingTools.Tasks.Utilties.ITaskLogger"/> instance used.
            </summary>
        </member>
        <member name="M:BeatSaberModdingTools.Tasks.GetCommitHash.TryGetGitCommit(System.String,System.String@)">
            <summary>
            Attempts to retrieve the git commit hash using the 'git' program.
            </summary>
            <param name="commitHash"></param>
            <returns></returns>
        </member>
        <member name="M:BeatSaberModdingTools.Tasks.GetCommitHash.GetGitStatus(System.String)">
            <summary>
            Attempts to check if the repository has uncommitted changes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BeatSaberModdingTools.Tasks.GetCommitHash.TryGetCommitManual(System.String[],System.String@)">
            <summary>
            Attempts to retrieve the git commit hash by reading git files.
            </summary>
            <param name="gitPaths"></param>
            <param name="commitHash"></param>
            <returns></returns>
        </member>
        <member name="M:BeatSaberModdingTools.Tasks.GetCommitHash.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns>true if successful</returns>
        </member>
        <member name="T:BeatSaberModdingTools.Tasks.GitStatus">
            <summary>
            Container for data on status of a git repository.
            </summary>
        </member>
        <member name="F:BeatSaberModdingTools.Tasks.GitStatus.Branch">
            <summary>
            Current branch of the repository.
            </summary>
        </member>
        <member name="F:BeatSaberModdingTools.Tasks.GitStatus.Modified">
            <summary>
            'Modified' if the repository is modified, 'Unmodified' if it's not.
            Null/Empty string if undetermined.
            </summary>
        </member>
        <member name="T:BeatSaberModdingTools.Tasks.GetManifestInfo">
            <summary>
            Reads a BSIPA manifest json file, compares the values to the project's assembly version, and outputs information from the manifest.
            </summary>
        </member>
        <member name="F:BeatSaberModdingTools.Tasks.GetManifestInfo.ErrorString">
            <summary>
            Default output when a property can't be read.
            </summary>
        </member>
        <member name="F:BeatSaberModdingTools.Tasks.GetManifestInfo.Logger">
            <summary>
            <see cref="T:BeatSaberModdingTools.Tasks.Utilties.ITaskLogger"/> instance used.
            </summary>
        </member>
        <member name="P:BeatSaberModdingTools.Tasks.GetManifestInfo.GameVersion">
            <summary>
            Beat Saber game version the mod or lib is compatible with, as reported by the manifest.
            </summary>
        </member>
        <member name="P:BeatSaberModdingTools.Tasks.GetManifestInfo.PluginVersion">
            <summary>
            The mod or lib's version as reported by the manifest.
            </summary>
        </member>
        <member name="P:BeatSaberModdingTools.Tasks.GetManifestInfo.AssemblyVersion">
            <summary>
            Version of the assembly.
            </summary>
        </member>
        <member name="P:BeatSaberModdingTools.Tasks.GetManifestInfo.KnownAssemblyVersion">
            <summary>
            Optional: Skip trying to read the assembly version of the project and use this value instead. Useful if the project already has a property with the assembly version.
            </summary>
        </member>
        <member name="P:BeatSaberModdingTools.Tasks.GetManifestInfo.ManifestPath">
            <summary>
            Optional: Path to the manifest file. Default is 'manifest.json'.
            </summary>
        </member>
        <member name="P:BeatSaberModdingTools.Tasks.GetManifestInfo.AssemblyInfoPath">
            <summary>
            Optional: Path to the file containing the assembly information. Default is 'Properties\AssemblyInfo.cs'.
            </summary>
        </member>
        <member name="P:BeatSaberModdingTools.Tasks.GetManifestInfo.ErrorOnMismatch">
            <summary>
            If enabled, this task will report a failure if the assembly version and manifest version don't match or there was a problem getting the value for either of them.
            </summary>
        </member>
        <member name="M:BeatSaberModdingTools.Tasks.GetManifestInfo.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns>true if successful</returns>
        </member>
        <member name="M:BeatSaberModdingTools.Tasks.GetManifestInfo.GetAssemblyVersion(System.String,System.Boolean)">
            <summary>
            Parses the assembly version from the given file.
            </summary>
            <param name="assemblyFile"></param>
            <param name="errorOnMismatch"></param>
            <returns></returns>
        </member>
        <member name="T:BeatSaberModdingTools.Tasks.ParsingExceptionExtensions">
            <summary>
            Extensions for <see cref="T:BeatSaberModdingTools.Tasks.ParsingException"/>.
            </summary>
        </member>
        <member name="M:BeatSaberModdingTools.Tasks.ParsingExceptionExtensions.LogErrorFromException(BeatSaberModdingTools.Tasks.ParsingException,BeatSaberModdingTools.Tasks.Utilties.ITaskLogger)">
            <summary>
            Logs an error from the <see cref="T:BeatSaberModdingTools.Tasks.ParsingException"/> using the given <see cref="T:BeatSaberModdingTools.Tasks.Utilties.ITaskLogger"/>.
            </summary>
            <param name="ex"></param>
            <param name="Log"></param>
        </member>
        <member name="T:BeatSaberModdingTools.Tasks.ParsingException">
            <summary>
            Exception thrown on parsing errors.
            </summary>
        </member>
        <member name="F:BeatSaberModdingTools.Tasks.ParsingException.SubCategory">
            <summary>
            Log entry SubCategory.
            </summary>
        </member>
        <member name="F:BeatSaberModdingTools.Tasks.ParsingException.MessageCode">
            <summary>
            Log entry MessageCode.
            </summary>
        </member>
        <member name="F:BeatSaberModdingTools.Tasks.ParsingException.HelpKeyword">
            <summary>
            Log entry HelpKeyword.
            </summary>
        </member>
        <member name="F:BeatSaberModdingTools.Tasks.ParsingException.File">
            <summary>
            Log entry File name.
            </summary>
        </member>
        <member name="F:BeatSaberModdingTools.Tasks.ParsingException.LineNumber">
            <summary>
            Log entry line number.
            </summary>
        </member>
        <member name="F:BeatSaberModdingTools.Tasks.ParsingException.ColumnNumber">
            <summary>
            Log entry column number.
            </summary>
        </member>
        <member name="F:BeatSaberModdingTools.Tasks.ParsingException.EndLineNumber">
            <summary>
            Log entry end line number.
            </summary>
        </member>
        <member name="F:BeatSaberModdingTools.Tasks.ParsingException.EndColumnNumber">
            <summary>
            Log entry end column number.
            </summary>
        </member>
        <member name="F:BeatSaberModdingTools.Tasks.ParsingException.MessageArgs">
            <summary>
            Log entry Message args.
            </summary>
        </member>
        <member name="M:BeatSaberModdingTools.Tasks.ParsingException.#ctor(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:BeatSaberModdingTools.Tasks.ParsingException.#ctor(System.String,System.Exception)">
            <inheritdoc/>
        </member>
        <member name="M:BeatSaberModdingTools.Tasks.ParsingException.#ctor(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Object[])">
            <summary>
            Creates a <see cref="T:BeatSaberModdingTools.Tasks.ParsingException"/> using the given message data.
            </summary>
            <param name="subCategory"></param>
            <param name="messageCode"></param>
            <param name="helpKeyword"></param>
            <param name="file"></param>
            <param name="lineNumber"></param>
            <param name="columnNumber"></param>
            <param name="endLineNumber"></param>
            <param name="endColumnNumber"></param>
            <param name="message"></param>
            <param name="messageArgs"></param>
        </member>
        <member name="T:BeatSaberModdingTools.Tasks.IsProcessRunning">
            <summary>
            Checks if a process is currently running.
            </summary>
        </member>
        <member name="P:BeatSaberModdingTools.Tasks.IsProcessRunning.ProcessName">
            <summary>
            Name of the process.
            </summary>
        </member>
        <member name="P:BeatSaberModdingTools.Tasks.IsProcessRunning.IsRunning">
            <summary>
            True if the process is running, false otherwise.
            </summary>
        </member>
        <member name="F:BeatSaberModdingTools.Tasks.IsProcessRunning.Logger">
            <summary>
            <see cref="T:BeatSaberModdingTools.Tasks.Utilties.ITaskLogger"/> instance used.
            </summary>
        </member>
        <member name="M:BeatSaberModdingTools.Tasks.IsProcessRunning.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns>true if successful</returns>
        </member>
        <member name="T:BeatSaberModdingTools.Tasks.MessageCodes">
            <summary>
            Message codes.
            </summary>
        </member>
        <member name="T:BeatSaberModdingTools.Tasks.MessageCodes.GetManifestInfo">
            <summary>
            Message codes for GetManifestInfo.
            </summary>
        </member>
        <member name="F:BeatSaberModdingTools.Tasks.MessageCodes.GetManifestInfo.VersionMismatch">
            <summary>
            Manifest and assembly versions don't match.
            </summary>
        </member>
        <member name="F:BeatSaberModdingTools.Tasks.MessageCodes.GetManifestInfo.ManifestFileNotFound">
            <summary>
            Manifest file doesn't exist.
            </summary>
        </member>
        <member name="F:BeatSaberModdingTools.Tasks.MessageCodes.GetManifestInfo.AssemblyInfoNotFound">
            <summary>
            AssemblyInfo file not found and known assembly version not given.
            </summary>
        </member>
        <member name="F:BeatSaberModdingTools.Tasks.MessageCodes.GetManifestInfo.AssemblyVersionMismatch">
            <summary>
            AssemblyVersion and AssemblyFileVersion don't match.
            </summary>
        </member>
        <member name="F:BeatSaberModdingTools.Tasks.MessageCodes.GetManifestInfo.AssemblyVersionParseFail">
            <summary>
            AssemblyVersion couldn't be parsed from AssemblyInfo file.
            </summary>
        </member>
        <member name="F:BeatSaberModdingTools.Tasks.MessageCodes.GetManifestInfo.PluginVersionNotFound">
            <summary>
            PluginVersion could not be determined from tthe manifest.
            </summary>
        </member>
        <member name="F:BeatSaberModdingTools.Tasks.MessageCodes.GetManifestInfo.GameVersionNotFound">
            <summary>
            GameVersion could not be determined from the manifest.
            </summary>
        </member>
        <member name="F:BeatSaberModdingTools.Tasks.MessageCodes.GetManifestInfo.AssemblyFileVersionParseFail">
            <summary>
            AssemblyFileVersion couldn't be determined from AssemblyInfo.
            </summary>
        </member>
        <member name="F:BeatSaberModdingTools.Tasks.MessageCodes.GetManifestInfo.GeneralFailure">
            <summary>
            Other error.
            </summary>
        </member>
        <member name="T:BeatSaberModdingTools.Tasks.MessageCodes.IsProcessRunning">
            <summary>
            Message codes for IsProcessRunning.
            </summary>
        </member>
        <member name="F:BeatSaberModdingTools.Tasks.MessageCodes.IsProcessRunning.EmptyProcessName">
            <summary>
            <see cref="P:BeatSaberModdingTools.Tasks.IsProcessRunning.ProcessName"/> was given an empty or null value.
            </summary>
        </member>
        <member name="F:BeatSaberModdingTools.Tasks.MessageCodes.IsProcessRunning.GeneralFailure">
            <summary>
            Other error.
            </summary>
        </member>
        <member name="T:BeatSaberModdingTools.Tasks.MessageCodes.ZipDir">
            <summary>
            Message codes for ZipDir.
            </summary>
        </member>
        <member name="F:BeatSaberModdingTools.Tasks.MessageCodes.ZipDir.ZipFailed">
            <summary>
            Other error.
            </summary>
        </member>
        <member name="F:BeatSaberModdingTools.Tasks.MessageCodes.ZipDir.ZipEmptySource">
            <summary>
            <see cref="P:BeatSaberModdingTools.Tasks.ZipDir.SourceDirectory"/> was given an empty or null value.
            </summary>
        </member>
        <member name="F:BeatSaberModdingTools.Tasks.MessageCodes.ZipDir.ZipEmptyDestination">
            <summary>
            <see cref="P:BeatSaberModdingTools.Tasks.ZipDir.DestinationFile"/> was given an empty or null value.
            </summary>
        </member>
        <member name="F:BeatSaberModdingTools.Tasks.MessageCodes.ZipDir.ZipMissingSource">
            <summary>
            Path specified in <see cref="P:BeatSaberModdingTools.Tasks.ZipDir.SourceDirectory"/> does not exist.
            </summary>
        </member>
        <member name="T:BeatSaberModdingTools.Tasks.MessageCodes.GetCommitHash">
            <summary>
            Message codes for GetCommitHash.
            </summary>
        </member>
        <member name="F:BeatSaberModdingTools.Tasks.MessageCodes.GetCommitHash.GitFailed">
            <summary>
            Other error.
            </summary>
        </member>
        <member name="F:BeatSaberModdingTools.Tasks.MessageCodes.GetCommitHash.GitNoRepository">
            <summary>
            Project is not in a git repository.
            </summary>
        </member>
        <member name="T:BeatSaberModdingTools.Tasks.MessageCodes.ReplaceInFile">
            <summary>
            Message codes for ReplaceInFile.
            </summary>
        </member>
        <member name="F:BeatSaberModdingTools.Tasks.MessageCodes.ReplaceInFile.EmptyFile">
            <summary>
            <see cref="P:BeatSaberModdingTools.Tasks.ReplaceInFile.File"/> is null or empty.
            </summary>
        </member>
        <member name="F:BeatSaberModdingTools.Tasks.MessageCodes.ReplaceInFile.MissingSource">
            <summary>
            Path specified in <see cref="P:BeatSaberModdingTools.Tasks.ReplaceInFile.File"/> does not exist.
            </summary>
        </member>
        <member name="F:BeatSaberModdingTools.Tasks.MessageCodes.ReplaceInFile.EmptyPattern">
            <summary>
            <see cref="P:BeatSaberModdingTools.Tasks.ReplaceInFile.Pattern"/> is null or empty.
            </summary>
        </member>
        <member name="F:BeatSaberModdingTools.Tasks.MessageCodes.ReplaceInFile.ReplaceFailed">
            <summary>
            Other error.
            </summary>
        </member>
        <member name="T:BeatSaberModdingTools.Tasks.ReplaceInFile">
            <summary>
            Replaces a string pattern with a value in a file.
            </summary>
        </member>
        <member name="P:BeatSaberModdingTools.Tasks.ReplaceInFile.File">
            <summary>
            File path.
            </summary>
        </member>
        <member name="P:BeatSaberModdingTools.Tasks.ReplaceInFile.Pattern">
            <summary>
            Pattern to match (case sensitive).
            </summary>
        </member>
        <member name="P:BeatSaberModdingTools.Tasks.ReplaceInFile.Substitute">
            <summary>
            String to substitute.
            </summary>
        </member>
        <member name="P:BeatSaberModdingTools.Tasks.ReplaceInFile.UseRegex">
            <summary>
            Set to true if <see cref="P:BeatSaberModdingTools.Tasks.ReplaceInFile.Pattern"/> is a regular expression.
            </summary>
        </member>
        <member name="P:BeatSaberModdingTools.Tasks.ReplaceInFile.RegexMultilineMode">
            <summary>
            Changes '^' and '$ so they match the beginning and end of a line instead of the entire string.
            </summary>
        </member>
        <member name="P:BeatSaberModdingTools.Tasks.ReplaceInFile.RegexSinglelineMode">
            <summary>
            Changes the meaning of '.' so it matches every character except '\n' (newline).
            </summary>
        </member>
        <member name="P:BeatSaberModdingTools.Tasks.ReplaceInFile.EscapeBackslash">
            <summary>
            Escapes the '\' character in Substitute with '\\'. Does not escape '\n'.
            </summary>
        </member>
        <member name="F:BeatSaberModdingTools.Tasks.ReplaceInFile.Logger">
            <summary>
            <see cref="T:BeatSaberModdingTools.Tasks.Utilties.ITaskLogger"/> instance used.
            </summary>
        </member>
        <member name="M:BeatSaberModdingTools.Tasks.ReplaceInFile.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns>true if successful</returns>
        </member>
        <member name="T:BeatSaberModdingTools.Tasks.Utilties.ITaskLogger">
            <summary>
            Logging interface for easier unit testing.
            </summary>
        </member>
        <member name="M:BeatSaberModdingTools.Tasks.Utilties.ITaskLogger.LogMessage(Microsoft.Build.Framework.MessageImportance,System.String,System.Object[])">
            <summary>
            Logs a message.
            </summary>
            <param name="importance"></param>
            <param name="message"></param>
            <param name="messageArgs"></param>
        </member>
        <member name="M:BeatSaberModdingTools.Tasks.Utilties.ITaskLogger.LogWarning(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Object[])">
            <summary>
            Logs a warning.
            </summary>
            <param name="subcategory"></param>
            <param name="warningCode"></param>
            <param name="helpKeyword"></param>
            <param name="file"></param>
            <param name="lineNumber"></param>
            <param name="columnNumber"></param>
            <param name="endLineNumber"></param>
            <param name="endColumnNumber"></param>
            <param name="message"></param>
            <param name="messageArgs"></param>
        </member>
        <member name="M:BeatSaberModdingTools.Tasks.Utilties.ITaskLogger.LogWarning(System.String,System.Object[])">
            <summary>
            Logs a warning.
            </summary>
            <param name="message"></param>
            <param name="messageArgs"></param>
        </member>
        <member name="M:BeatSaberModdingTools.Tasks.Utilties.ITaskLogger.LogError(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Object[])">
            <summary>
            Logs an error.
            </summary>
            <param name="subcategory"></param>
            <param name="errorCode"></param>
            <param name="helpKeyword"></param>
            <param name="file"></param>
            <param name="lineNumber"></param>
            <param name="columnNumber"></param>
            <param name="endLineNumber"></param>
            <param name="endColumnNumber"></param>
            <param name="message"></param>
            <param name="messageArgs"></param>
        </member>
        <member name="M:BeatSaberModdingTools.Tasks.Utilties.ITaskLogger.LogMessage(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,Microsoft.Build.Framework.MessageImportance,System.String,System.Object[])">
            <summary>
            Logs a message.
            </summary>
            <param name="subcategory"></param>
            <param name="code"></param>
            <param name="helpKeyword"></param>
            <param name="file"></param>
            <param name="lineNumber"></param>
            <param name="columnNumber"></param>
            <param name="endLineNumber"></param>
            <param name="endColumnNumber"></param>
            <param name="messageImportance"></param>
            <param name="message"></param>
            <param name="messageArgs"></param>
        </member>
        <member name="M:BeatSaberModdingTools.Tasks.Utilties.ITaskLogger.LogError(System.String,System.Object[])">
            <summary>
            Logs an error.
            </summary>
            <param name="message"></param>
            <param name="messageArgs"></param>
        </member>
        <member name="M:BeatSaberModdingTools.Tasks.Utilties.ITaskLogger.LogErrorFromException(System.Exception)">
            <summary>
            Logs an error from an <see cref="T:System.Exception"/>.
            </summary>
            <param name="exception"></param>
        </member>
        <member name="T:BeatSaberModdingTools.Tasks.Utilties.LogWrapper">
            <summary>
            Wrapper for <see cref="T:Microsoft.Build.Utilities.TaskLoggingHelper"/> that implements <see cref="T:BeatSaberModdingTools.Tasks.Utilties.ITaskLogger"/>.
            </summary>
        </member>
        <member name="F:BeatSaberModdingTools.Tasks.Utilties.LogWrapper.Logger">
            <summary>
            The <see cref="T:Microsoft.Build.Utilities.TaskLoggingHelper"/> instance.
            </summary>
        </member>
        <member name="M:BeatSaberModdingTools.Tasks.Utilties.LogWrapper.#ctor(Microsoft.Build.Utilities.TaskLoggingHelper)">
            <summary>
            Creates a new <see cref="T:BeatSaberModdingTools.Tasks.Utilties.LogWrapper"/> using a <see cref="T:Microsoft.Build.Utilities.TaskLoggingHelper"/>.
            </summary>
            <param name="logger"></param>
        </member>
        <member name="M:BeatSaberModdingTools.Tasks.Utilties.LogWrapper.LogError(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Object[])">
            <inheritdoc/>
        </member>
        <member name="M:BeatSaberModdingTools.Tasks.Utilties.LogWrapper.LogError(System.String,System.Object[])">
            <inheritdoc/>
        </member>
        <member name="M:BeatSaberModdingTools.Tasks.Utilties.LogWrapper.LogErrorFromException(System.Exception)">
            <inheritdoc/>
        </member>
        <member name="M:BeatSaberModdingTools.Tasks.Utilties.LogWrapper.LogMessage(Microsoft.Build.Framework.MessageImportance,System.String,System.Object[])">
            <inheritdoc/>
        </member>
        <member name="M:BeatSaberModdingTools.Tasks.Utilties.LogWrapper.LogMessage(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,Microsoft.Build.Framework.MessageImportance,System.String,System.Object[])">
            <inheritdoc/>
        </member>
        <member name="M:BeatSaberModdingTools.Tasks.Utilties.LogWrapper.LogWarning(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Object[])">
            <inheritdoc/>
        </member>
        <member name="M:BeatSaberModdingTools.Tasks.Utilties.LogWrapper.LogWarning(System.String,System.Object[])">
            <inheritdoc/>
        </member>
        <member name="T:BeatSaberModdingTools.Tasks.Utilties.MockTaskLogger">
            <summary>
            A mock logger that implements <see cref="T:BeatSaberModdingTools.Tasks.Utilties.ITaskLogger"/> for unit testing.
            </summary>
        </member>
        <member name="F:BeatSaberModdingTools.Tasks.Utilties.MockTaskLogger.LogEntries">
            <summary>
            List of log entries created by this instance.
            </summary>
        </member>
        <member name="M:BeatSaberModdingTools.Tasks.Utilties.MockTaskLogger.LogError(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Object[])">
            <inheritdoc/>
        </member>
        <member name="M:BeatSaberModdingTools.Tasks.Utilties.MockTaskLogger.LogError(System.String,System.Object[])">
            <inheritdoc/>
        </member>
        <member name="M:BeatSaberModdingTools.Tasks.Utilties.MockTaskLogger.LogErrorFromException(System.Exception)">
            <inheritdoc/>
        </member>
        <member name="M:BeatSaberModdingTools.Tasks.Utilties.MockTaskLogger.LogMessage(Microsoft.Build.Framework.MessageImportance,System.String,System.Object[])">
            <inheritdoc/>
        </member>
        <member name="M:BeatSaberModdingTools.Tasks.Utilties.MockTaskLogger.LogMessage(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,Microsoft.Build.Framework.MessageImportance,System.String,System.Object[])">
            <inheritdoc/>
        </member>
        <member name="M:BeatSaberModdingTools.Tasks.Utilties.MockTaskLogger.LogWarning(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Object[])">
            <inheritdoc/>
        </member>
        <member name="M:BeatSaberModdingTools.Tasks.Utilties.MockTaskLogger.LogWarning(System.String,System.Object[])">
            <inheritdoc/>
        </member>
        <member name="T:BeatSaberModdingTools.Tasks.Utilties.MockLogEntry">
            <summary>
            Stores log entry data.
            </summary>
        </member>
        <member name="F:BeatSaberModdingTools.Tasks.Utilties.MockLogEntry.SubCategory">
            <summary>
            Log entry SubCategory.
            </summary>
        </member>
        <member name="F:BeatSaberModdingTools.Tasks.Utilties.MockLogEntry.MessageCode">
            <summary>
            Log entry MessageCode.
            </summary>
        </member>
        <member name="F:BeatSaberModdingTools.Tasks.Utilties.MockLogEntry.HelpKeyword">
            <summary>
            Log entry HelpKeyword.
            </summary>
        </member>
        <member name="F:BeatSaberModdingTools.Tasks.Utilties.MockLogEntry.File">
            <summary>
            Log entry File name.
            </summary>
        </member>
        <member name="F:BeatSaberModdingTools.Tasks.Utilties.MockLogEntry.LineNumber">
            <summary>
            Log entry line number.
            </summary>
        </member>
        <member name="F:BeatSaberModdingTools.Tasks.Utilties.MockLogEntry.ColumnNumber">
            <summary>
            Log entry column number.
            </summary>
        </member>
        <member name="F:BeatSaberModdingTools.Tasks.Utilties.MockLogEntry.EndLineNumber">
            <summary>
            Log entry end line number.
            </summary>
        </member>
        <member name="F:BeatSaberModdingTools.Tasks.Utilties.MockLogEntry.EndColumnNumber">
            <summary>
            Log entry end column number.
            </summary>
        </member>
        <member name="F:BeatSaberModdingTools.Tasks.Utilties.MockLogEntry.Message">
            <summary>
            Log entry Message.
            </summary>
        </member>
        <member name="F:BeatSaberModdingTools.Tasks.Utilties.MockLogEntry.MessageArgs">
            <summary>
            Log entry Message args.
            </summary>
        </member>
        <member name="F:BeatSaberModdingTools.Tasks.Utilties.MockLogEntry.Exception">
            <summary>
            Log entry Exception.
            </summary>
        </member>
        <member name="F:BeatSaberModdingTools.Tasks.Utilties.MockLogEntry.Importance">
            <summary>
            Log entry Importance.
            </summary>
        </member>
        <member name="F:BeatSaberModdingTools.Tasks.Utilties.MockLogEntry.EntryType">
            <summary>
            Log entry type.
            </summary>
        </member>
        <member name="M:BeatSaberModdingTools.Tasks.Utilties.MockLogEntry.#ctor(BeatSaberModdingTools.Tasks.Utilties.LogEntryType)">
            <summary>
            Creates a new <see cref="T:BeatSaberModdingTools.Tasks.Utilties.MockLogEntry"/> of the given type.
            </summary>
            <param name="entryType"></param>
        </member>
        <member name="M:BeatSaberModdingTools.Tasks.Utilties.MockLogEntry.ToString">
            <inheritdoc/>
        </member>
        <member name="T:BeatSaberModdingTools.Tasks.Utilties.LogEntryType">
            <summary>
            Log entry type.
            </summary>
        </member>
        <member name="F:BeatSaberModdingTools.Tasks.Utilties.LogEntryType.Message">
            <summary>
            Message
            </summary>
        </member>
        <member name="F:BeatSaberModdingTools.Tasks.Utilties.LogEntryType.Warning">
            <summary>
            Warning
            </summary>
        </member>
        <member name="F:BeatSaberModdingTools.Tasks.Utilties.LogEntryType.Error">
            <summary>
            Error
            </summary>
        </member>
        <member name="F:BeatSaberModdingTools.Tasks.Utilties.LogEntryType.Exception">
            <summary>
            Exception
            </summary>
        </member>
        <member name="T:BeatSaberModdingTools.Tasks.ZipDir">
            <summary>
            Zips the contents of a directory.
            </summary>
        </member>
        <member name="P:BeatSaberModdingTools.Tasks.ZipDir.SourceDirectory">
            <summary>
            Name of the directory to zip.
            </summary>
        </member>
        <member name="P:BeatSaberModdingTools.Tasks.ZipDir.DestinationFile">
            <summary>
            Name of the created zip file.
            </summary>
        </member>
        <member name="P:BeatSaberModdingTools.Tasks.ZipDir.ZipPath">
            <summary>
            Full path to the created zip file.
            </summary>
        </member>
        <member name="F:BeatSaberModdingTools.Tasks.ZipDir.Logger">
            <summary>
            <see cref="T:BeatSaberModdingTools.Tasks.Utilties.ITaskLogger"/> instance used.
            </summary>
        </member>
        <member name="M:BeatSaberModdingTools.Tasks.ZipDir.Execute">
            <summary>
            Executes the task.
            </summary>
            <returns>true if successful</returns>
        </member>
    </members>
</doc>
